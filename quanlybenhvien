
import java.io.Serializable;
import java.util.Scanner;

public class BacSi extends Nhanvien implements Serializable {
    private int mabacsi;
    private String chuyenkhoa;
    public BacSi() {

    }

    public BacSi(int age, String hoten, String diachi, int mabacsi,String chuyenkhoa) {
        super(age, hoten, diachi);
        this.mabacsi = mabacsi;
        this.chuyenkhoa = chuyenkhoa;
    }

    public void setMabacsi(int mabacsi) {
        this.mabacsi = mabacsi;
    }

    public int getMabacsi() {
        return mabacsi;
    }

     public void Nhap() {
         Scanner sc = new Scanner(System.in);
         System.out.println("Nhap tuoi: ");
         setAge(sc.nextInt());
         sc.nextLine();
         System.out.println("Nhap ho ten: ");
         setHoten(sc.nextLine());
         System.out.println("Nhap dia chi: ");
        setDiachi(sc.nextLine().trim());
        System.out.println("Nhap ma bac si: ");
        mabacsi = sc.nextInt();
         System.out.println("Nhap chuyen khoa bac si: ");
         chuyenkhoa= sc.nextLine().trim();

    }

    public void Xuat() {
        System.out.println("Thong tin nhan vien: ");
        System.out.println("Tuoi: " +getAge());
        System.out.println("Ho ten: " + getHoten());
        System.out.println("Dia chi: " + getDiachi());
        System.out.println("Ma bac si: " + mabacsi);
        System.out.println("Chuyen khoa: " + chuyenkhoa);
    }
}


import java.io.Serializable;
import java.util.Scanner;

public class BenhNhan implements Serializable, NhapXuat {
    private String hoten;
    private int ngay;
    private int thang;
    private int nam;
    private String diachi;
    private String mabaohiem;

    public BenhNhan() {

    }

    public BenhNhan(String hoten, int ngay, int thang, int nam, String diachi, String mabaohiem) {
        this.hoten = hoten;
        this.ngay = ngay;
        this.thang = thang;
        this.nam = nam;
        this.diachi = diachi;
        this.mabaohiem = mabaohiem;
    }

    public void setHoten(String hoten) {
        this.hoten = hoten;
    }

    public String getHoten() {
        return hoten;
    }
@Override
    public void Nhap() {
        System.out.println("Ho ten benh nhan: ");
        Scanner sc = new Scanner(System.in);
        hoten = sc.nextLine();
        System.out.println("Nhap ngay thang nam sinh: ");
        ngay = sc.nextInt();
        thang = sc.nextInt();
        nam = sc.nextInt();
        sc.nextLine(); // Tiêu diệt dòng trống
        System.out.println("Nhap dia chi: ");
        diachi = sc.nextLine();
        System.out.println("Nhap ma bao hiem neu co: ");
        mabaohiem = sc.nextLine();
    }
@Override
    public void Xuat() {
        System.out.println("Thong tin nguoi benh: ");
        System.out.println("Ho ten: " + hoten);
        System.out.println("Ngay thang nam sinh: " + ngay + "/" + thang + "/" + nam);
        System.out.println("Dia chi: " + diachi);
        System.out.println("Ma bao hiem: " + mabaohiem);
    }
}

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class File {


    // hàm viết và đọc đối  tượng
    //pathObj là các đường dẫn
    // Lưu ý: muốn thêm 1 phần tử vào file thì phải đọc toàn bộ ra List rồi thêm vào List sau đó mới lưu lại lên file
    public static <T> List<T> read(String pathObj) {
        List<T> objs = new ArrayList<>();
        try (ObjectInputStream file = new ObjectInputStream(new BufferedInputStream(new FileInputStream(pathObj)))) {
            boolean eof = false;
            while (!eof) {
                try {
                    T obj = (T) file.readObject();
                    if (obj != null) {
                        objs.add(obj);
                    } else {
                        eof = true;
                    }
                } catch (EOFException e) {
                    eof = true;
                }
            }
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        return objs;
    }


    public static <T> void write(List<T> objs, String pathObj) {
        try (ObjectOutputStream file = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(pathObj)))) {
            for (T obj : objs) {
                file.writeObject(obj);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

import java.io.Serializable;
import java.util.List;
import java.util.Scanner;

public class Khoa implements Serializable, NhapXuat {
    private String tenKhoa;
    private String chucNang;
    List<BacSi> bacSiThuocKhoa;

    public Khoa() {

    }

    public Khoa(String tenKhoa, String chucNang, List<BacSi> bacSiThuocKhoa) {
        this.bacSiThuocKhoa = bacSiThuocKhoa;
        this.tenKhoa = tenKhoa;
        this.chucNang = chucNang;
    }

    public void setBacSiThuocKhoa(List<BacSi> bacSiThuocKhoa) {
        this.bacSiThuocKhoa = bacSiThuocKhoa;
    }

    public List<BacSi> getBacSiThuocKhoa() {
        return bacSiThuocKhoa;
    }

    public void setChucNang(String chucNang) {
        this.chucNang = chucNang;
    }

    public String getChucNang() {
        return chucNang;
    }

    public void setTenKhoa(String tenKhoa) {
        this.tenKhoa = tenKhoa;
    }

    public String getTenKhoa() {
        return tenKhoa;
    }

    // nhập thông tin của khoa
    @Override
    public void Nhap() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập tên khoa: ");
        tenKhoa = scanner.nextLine().trim();
        System.out.println("Nhập chức năng: ");
        chucNang = scanner.nextLine().trim();

    }

    //hàm tìm bác sĩ có thuộc khoa
    public BacSi findBacSi(int maSoBacSi) {
        BacSi bacSi = new BacSi();
        for (BacSi bs : bacSiThuocKhoa) {
            if (bs.getMabacsi() == maSoBacSi) bacSi = bs;
        }
        return bacSi;
    }

    // xem các lịch hẹn của bác sĩ
    @Override
    public void Xuat() {
        List<LichHen> lichHenList = File.read("file/DSLichHen.dat");
        System.out.println("Nhập id lịch hẹn :");
        int id = new Scanner(System.in).nextInt();
        for (LichHen lichHen : lichHenList) {
            if (lichHen.getId() == id) {
                lichHen.Xuat();
                break;
            }
        }
        System.out.println("Bác sĩ không có lịch hẹn");
    }


    // xuất thông tin của khoa
    public void xuatKhoa() {
        System.out.println("Tên khoa:" + tenKhoa);
        System.out.println("Chức năng:" + chucNang);
        System.out.println("Thông tin các bác sĩ: ");

        for (BacSi bacSi : bacSiThuocKhoa) {
            bacSi.Xuat();
        }
    }

    // Thêm bác sĩ
    public List<BacSi> themBacSi(BacSi newBacsi) {
        bacSiThuocKhoa.add(newBacsi);
        return bacSiThuocKhoa;
    }

    // xóa bác sĩ
    public List<BacSi> xoaBacSi(BacSi newBacsi) {
        bacSiThuocKhoa.remove(newBacsi);
        return bacSiThuocKhoa;
    }

}

import java.io.Serializable;
import java.util.Scanner;

public class LeTan extends  Nhanvien implements Serializable {
    private int maletan;

    public LeTan() {

    }
    public LeTan(int age, String hoten, String diachi, int maletan) {
        super(age, hoten, diachi);
        this.maletan = maletan;
    }
    public void Nhap() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Nhap tuoi: ");
        setAge(sc.nextInt());
        sc.nextLine();
        System.out.println("Nhap ho ten: ");
        setHoten(sc.nextLine());
        System.out.println("Nhap dia chi: ");
        setDiachi(sc.nextLine());
        System.out.println("Nhap ma le tan: ");
        maletan = sc.nextInt();
    }
    public void Xuat() {
        System.out.println("Thong tin nhan vien: ");
        System.out.println("Tuoi: " +getAge());
        System.out.println("Ho ten: " + getHoten());
        System.out.println("Dia chi: " + getDiachi());
        System.out.println("Ma le tan: " + maletan);
    }
}


import java.io.Serializable;
import java.util.Scanner;

public class LichHen implements Serializable, NhapXuat {
    private int id;
    private String ngayHen;
    private String gio;
    private BenhNhan benhNhan;
    private BacSi bacSi;
    private String trieuChung;
    private String status;

    public LichHen() {

    }

    //    cần mảng để quản lí lịch hẹn đã xác nhận, đang chờ, hoặc hủy
    public LichHen(int id, BenhNhan benhNhan, BacSi bacSi, String ngay, String gio, String status, String trieuChung) {
        this.id = id;
        this.bacSi = bacSi;
        this.benhNhan = benhNhan;
        ngayHen = ngay;
        this.gio = gio;
        this.status = status;
        this.trieuChung = trieuChung;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getId() {
        return id;
    }

    public void setBacSi(BacSi bacSi) {
        this.bacSi = bacSi;
    }

    public BacSi getBacSi() {
        return bacSi;
    }

    public void setBenhNhan(BenhNhan benhNhan) {
        this.benhNhan = benhNhan;
    }

    public BenhNhan getBenhNhan() {
        return benhNhan;
    }

    public void setGio(String gio) {
        this.gio = gio;
    }

    public String getGio() {
        return gio;
    }

    public void setNgay(String ngay) {
        ngayHen = ngay;
    }

    public String getNgay() {
        return ngayHen;
    }

    public void setTrieuChung(String trieuChung) {
        this.trieuChung = trieuChung;
    }

    public String getTrieuChung() {
        return trieuChung;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getStatus() {
        return status;
    }

    // Nhập ngày và giờ được hẹn
    @Override
    public void Nhap() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập id: ");
        id = scanner.nextInt();
        scanner.nextLine();
        System.out.println("Nhập ngày: ");
        ngayHen = scanner.nextLine().trim();
        System.out.println("Nhập giờ: ");
        gio = scanner.nextLine().trim();
        System.out.println("Nhập triệu chứng: ");
        trieuChung = scanner.nextLine().trim();
        System.out.println("Xác nhận: ");
        status = scanner.nextLine();
    }

    // xuất lịch hẹn
    @Override
    public void Xuat() {
        System.out.println("Lịch hẹn khám bệnh");
        if (this.bacSi != null) {
            System.out.println("Tên bác sĩ: " + bacSi.getHoten());
        } else System.out.println("không có bác sĩ");
        if (this.benhNhan != null) {
            System.out.println("Tên bệnh nhân: " + benhNhan.getHoten());
        } else System.out.println("không có bệnh nhân");
        System.out.println("Triệu chứng cần khám: " + trieuChung);
        System.out.println("Thời gian: " + ngayHen + ", " + gio + "h");
    }

    // hàm lựa chọn chỉnh sửa lịch hẹn
    public void suaNgayGio() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập ngày: ");
        setNgay(scanner.nextLine().trim());
        System.out.println("Nhập giờ: ");
        setGio(scanner.nextLine().trim());
    }

    //Thay đổi bác sĩ
    public void suaBacSi() {
        Scanner scanner = new Scanner(System.in);
        BacSi si = new BacSi();
        si.Nhap();
        setBacSi(si);
    }

    //Thay đổi các triệu chứng về bệnh lý
    public void suaTrieuChung() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Sửa triệu chứng: ");
        setTrieuChung(scanner.nextLine().trim());
    }

    // Thay đổi trạng thái của lịch hẹn (đã xác nhận, đang chờ, hủy)
    public void thayDoiStatus() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Thay đổi xác nhận: ");
        setStatus(scanner.nextLine().trim());
    }

    public void chinhSuaLichHen() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Chỉnh sửa lịch hẹn ");
        System.out.println("1. Sửa ngày và giờ");
        System.out.println("2. Thay đổi bác sĩ");
        System.out.println("3. Sửa thông tin về bệnh nhân");
        System.out.println("4. Thay đổi trạng thái");
        System.out.println("0. Thoát");
        System.out.println("Nhập lựa chọn: ");
        int op;
        while (true) {
            op = scanner.nextInt();
            switch (op) {
                case 1:
                    suaNgayGio();
                    break;
                case 2:
                    suaBacSi();
                    break;
                case 3:
                    suaTrieuChung();
                    break;
                case 4:
                    thayDoiStatus();
                    break;
                case 0:
                    break;
                default:
                    System.out.println("Lựa chọn không đúng, vui lòng nhập lại.");
            }
        }
    }

}

import java.io.Serializable;
import java.util.List;
import java.util.Scanner;

public class LichTruc implements Serializable, NhapXuat {
    private String ngayTruc;
    private String caTruc;
    private List<BacSi> bacSiTruc;
    private List<YTa> yTas ;
    private List<LeTan> leTans;
    private String khoa;
    private String status;

    public LichTruc() {

    }

    public LichTruc(String ngayTruc, String caTruc, List<BacSi> bacSiTruc, String status) {
        this.ngayTruc = ngayTruc;
        this.caTruc = caTruc;
        this.bacSiTruc = bacSiTruc;
        this.status = status;
    }

    public void setBacSiTruc(List<BacSi> bacSiTruc) {
        this.bacSiTruc = bacSiTruc;
    }

    public List<BacSi> getBacSiTruc() {
        return bacSiTruc;
    }

    public void setCaTruc(String caTruc) {
        this.caTruc = caTruc;
    }

    public String getCaTruc() {
        return caTruc;
    }

    public void setKhoa(String khoa) {
        this.khoa = khoa;
    }

    public String getKhoa() {
        return khoa;
    }

    public void setNgayTruc(String ngayTruc) {
        this.ngayTruc = ngayTruc;
    }

    public String getNgayTruc() {
        return ngayTruc;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getStatus() {
        return status;
    }
    @Override
    public void Nhap() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập ngày/tháng/năm trực: ");
        ngayTruc = scanner.nextLine().trim();
        System.out.println("Nhập ca trực: ");
        caTruc = scanner.nextLine().trim();
        System.out.println("Nhập khoa: ");
        khoa = scanner.nextLine().trim();
    }
    @Override
    public void Xuat() {
        System.out.println("Khoa: " + khoa);
        System.out.println("Ngày :" + ngayTruc);
        System.out.println("Ca trực :" + caTruc);
        System.out.println("Các bác sĩ trực: ");
        for (BacSi bacSi : bacSiTruc) {
            System.out.println(bacSi.getMabacsi() + ", ");
        }
    }
    public List<BacSi> themBacSi(BacSi newBacsi) {
        bacSiTruc.add(newBacsi);
        return bacSiTruc;
    }
    public List<BacSi> xoaBacSi(BacSi newBacsi) {
        bacSiTruc.remove(newBacsi);
        return bacSiTruc;
    }
    public List<YTa> themYta(YTa yTa) {
        yTas.add(yTa);
        return yTas;
    }
    public List<YTa> xoaYta(YTa yTa) {
        yTas.remove(yTa);
        return yTas;
    }
    public List<LeTan> themLeTan(LeTan leTan) {
        leTans.add(leTan);
        return leTans;
    }
    public List<LeTan> xoaLeTan(LeTan leTan) {
        leTans.remove(leTan);
        return leTans;
    }
    public String kiemTraCaTruc() {
        if (getStatus().equals("finish")) return "Ca trực đã kết thúc";
        else if (getStatus().equals("running")) return " Đang trong ca trực";
        else if (getStatus().equals("waitting")) return "Đang chờ";
        else return "xác nhận";
    }
}

import java.io.Serializable;
import java.util.Scanner;

public abstract class Nhanvien implements Serializable {
    private int age;
    private String hoten;
    private String diachi;

    public void setAge(int age) {
        this.age = age;
    }

    public int getAge() {
        return age;
    }

    public void setDiachi(String diachi) {
        this.diachi = diachi;
    }


    public String getDiachi() {
        return diachi;
    }

    public void setHoten(String hoten) {
        this.hoten = hoten;
    }

    public String getHoten() {
        return hoten;
    }

    public Nhanvien() {
        age = 0;
        hoten = "";
        diachi = "";
    }
    public Nhanvien(int age, String hoten, String diachi) {
        this.age = age;
        this.hoten = hoten;
        this.diachi = diachi;
    }

    public abstract void Nhap();
    public abstract void Xuat() ;
}

public interface NhapXuat {
    void Nhap();
    void Xuat();
}

import java.io.Serializable;
import java.util.List;
import java.util.Scanner;

public class PhongBenh implements Serializable {
    int soPhong;
    private List<BenhNhan> benhNhans;
    // xác định phòng khám có sẵn, đang sử dụng, đang bảo trì....
    private String status;

    public PhongBenh() {

    }

    public PhongBenh(String status) {
        this.status = status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getStatus() {
        return status;
    }

    public void Nhap() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Nhập số phòng: ");
        soPhong = scanner.nextInt();
        scanner.nextLine();
        System.out.println("Nhập tính trạng: ");
        status = scanner.nextLine().trim();
    }

    // xuất các thông tin phòng khám
    public void xuatPhongKham() {
        System.out.println("Số phong: " + soPhong);
        System.out.println("Tình trạng phòng khám: " + status);
        System.out.println("Bệnh Nhân: ");
        if (benhNhans != null) {
            for (BenhNhan benhNhan : benhNhans) {
                System.out.println(benhNhan.getHoten() + ", ");
            }
        } else System.out.println("không có bệnh nhân");
    }
}

import java.io.Serializable;
import java.util.Scanner;

public class YTa extends Nhanvien implements Serializable {
    private int mayta;

    public YTa() {

    }
    public YTa(int age, String hoten, String diachi, int mayta) {
        super(age, hoten, diachi);
        this.mayta = mayta;
    }
    public void Nhap() {
        Scanner sc = new Scanner(System.in);
        System.out.println("Nhap tuoi: ");
       setAge(sc.nextInt());
        sc.nextLine();
        System.out.println("Nhap ho ten: ");
        setHoten(sc.nextLine());
        System.out.println("Nhap dia chi: ");
        setDiachi(sc.nextLine());
        System.out.println("Nhap ma y ta: ");
        mayta = sc.nextInt();
    }

    public void Xuat() {
        System.out.println("Thong tin nhan vien: ");
        System.out.println("Tuoi: " +getAge());
        System.out.println("Ho ten: " + getHoten());
        System.out.println("Dia chi: " + getDiachi());
        System.out.println("Ma y ta: " + mayta);
    }
}
